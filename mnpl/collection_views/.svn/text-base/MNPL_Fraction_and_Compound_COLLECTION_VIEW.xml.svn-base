<xsl:stylesheet version="1.0" xmlns:s="http://www.w3.org/2001/sw/DataAccess/rf1/result" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:variable name="BASEURL">
    <xsl:value-of select="$baseUrl"/>
  </xsl:variable>
  <xsl:variable name="PATH">
    <xsl:value-of select="$path"/>
  </xsl:variable>
  <xsl:variable name="thisPid" select="$collectionPid"/>
  <xsl:variable name="thisTitle" select="$collectionTitle"/>
  <xsl:variable name="size" select="20"/>
  <xsl:variable name="page" select="$hitPage"/>
  <xsl:variable name="start" select="((number($page) - 1) * number($size)) + 1"/>
  <xsl:variable name="end" select="($start - 1) + number($size)"/>
  <xsl:variable name="cellsPerRow" select="4"/>
  <xsl:variable name="count" select="count(s:sparql/s:results/s:result)"/>
  <xsl:template match="/">
    <xsl:if test="$count>0">
      <div STYLE="text-align: center;">
        <xsl:choose>
          <xsl:when test="$end >= $count and $start = 1">
            <xsl:value-of select="$start"/>-<xsl:value-of select="$count"/>
                        of <xsl:value-of select="$count"/> <br/>
          </xsl:when>
          <xsl:when test="$end >= $count">
            <xsl:value-of select="$start"/>-<xsl:value-of select="$count"/>
                        of <xsl:value-of select="$count"/> <br/>
            <a>
              <xsl:attribute name="href">
                <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:value-of select="$thisPid"/>/-/<xsl:value-of
                  select="$thisTitle"/>/<xsl:value-of select="$page - 1"/>
              </xsl:attribute>
                            &lt;&lt;Prev
                        </a>
          </xsl:when>
          <xsl:when test="$start = 1">
            <xsl:value-of select="$start"/>-<xsl:value-of select="$end"/>
                        of <xsl:value-of select="$count"/> <br/>
            <a>
              <xsl:attribute name="href">
                <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:value-of select="$thisPid"/>/-/<xsl:value-of
                  select="$thisTitle"/>/<xsl:value-of select="$page + 1"/>
              </xsl:attribute>
                            Next&gt;&gt;
                        </a>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$start"/>-<xsl:value-of select="$end"/>
                        of <xsl:value-of select="$count"/> <br/>
            <a>
              <xsl:attribute name="href">
                <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:value-of select="$thisPid"/>/-/<xsl:value-of
                  select="$thisTitle"/>/<xsl:value-of select="$page - 1"/>
              </xsl:attribute>
                            &lt;&lt;Prev
                        </a> 
                        <a>
              <xsl:attribute name="href">
                <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:value-of select="$thisPid"/>/-/<xsl:value-of
                  select="$thisTitle"/>/<xsl:value-of select="$page + 1"/>
              </xsl:attribute>
                            Next&gt;&gt;
                        </a>
          </xsl:otherwise>
        </xsl:choose>
      </div>
      <xsl:apply-templates select="s:sparql/s:results"/>
      <div STYLE="text-align: center;">
        <xsl:choose>
          <xsl:when test="$end >= $count and $start = 1">
            <xsl:value-of select="$start"/>-<xsl:value-of select="$count"/>
                        of <xsl:value-of select="$count"/> <br/>
          </xsl:when>
          <xsl:when test="$end >= $count">
            <xsl:value-of select="$start"/>-<xsl:value-of select="$count"/>
                        of <xsl:value-of select="$count"/> <br/>
            <a>
              <xsl:attribute name="href">
                <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:value-of select="$thisPid"/>/-/<xsl:value-of
                  select="$thisTitle"/>/<xsl:value-of select="$page - 1"/>
              </xsl:attribute>
                            &lt;&lt;Prev
                        </a>
          </xsl:when>
          <xsl:when test="$start = 1">
            <xsl:value-of select="$start"/>-<xsl:value-of select="$end"/>
                        of <xsl:value-of select="$count"/> <br/>
            <a>
              <xsl:attribute name="href">
                <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:value-of select="$thisPid"/>/-/<xsl:value-of
                  select="$thisTitle"/>/<xsl:value-of select="$page + 1"/>
              </xsl:attribute>
                            Next&gt;&gt;
                        </a>
          </xsl:when>
          <xsl:otherwise>
            <xsl:value-of select="$start"/>-<xsl:value-of select="$end"/>
                        of <xsl:value-of select="$count"/> <br/>
            <a>
              <xsl:attribute name="href">
                <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:value-of select="$thisPid"/>/-/<xsl:value-of
                  select="$thisTitle"/>/<xsl:value-of select="$page - 1"/>
              </xsl:attribute>
                            &lt;&lt;Prev
                        </a> 
                        <a>
              <xsl:attribute name="href">
                <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:value-of select="$thisPid"/>/-/<xsl:value-of
                  select="$thisTitle"/>/<xsl:value-of select="$page + 1"/>
              </xsl:attribute>
                            Next&gt;&gt;
                        </a>
          </xsl:otherwise>
        </xsl:choose>
      </div>
    </xsl:if>
  </xsl:template>
  <xsl:template match="s:sparql/s:results">
    <xsl:for-each select="s:result[position() mod $cellsPerRow = 1 and position()>=$start and position() &lt;=$end]">
      <xsl:apply-templates select=". | following-sibling::s:result[position() &lt; $cellsPerRow]"/>
    </xsl:for-each>
  </xsl:template>
  <xsl:template match="s:result">
    <xsl:variable name="OBJECTURI" select="s:object/@uri"/>
    <xsl:variable name="CONTENTURI" select="s:content/@uri"/>
    <xsl:variable name="CONTENTMODEL" select="substring-after($CONTENTURI,'/')"/>
    <xsl:variable name="PID" select="substring-after($OBJECTURI,'/')"/>
    <xsl:variable name="newTitle">
      <xsl:call-template name="replace-string">
        <xsl:with-param name="text" select="s:title"/>
        <xsl:with-param name="from" select="'_'"/>
        <xsl:with-param name="to" select="' '"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="linkUrl">
      <xsl:choose>
        <xsl:when test="($CONTENTMODEL='islandora:collectionCModel')">
          <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:copy-of select="$PID"/>/-/<xsl:value-of select="s:title"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:copy-of select="$PID"/>/OBJ/<xsl:value-of select="s:title"/>
        </xsl:otherwise>
      </xsl:choose>
      <xsl:value-of select="s:content"/>
    </xsl:variable>
    <li>
      <a>
        <xsl:attribute name="href">
          <xsl:value-of select="$BASEURL"/>/fedora/repository/<xsl:copy-of select="$PID"/>/-/<xsl:value-of select="s:title"/>
        </xsl:attribute>
        <xsl:value-of select="$newTitle"/>
      </a>
    </li>
  </xsl:template>
  <xsl:template name="replace-string">
    <xsl:param name="text"/>
    <xsl:param name="from"/>
    <xsl:param name="to"/>
    <xsl:choose>
      <xsl:when test="contains($text, $from)">
        <xsl:variable name="before" select="substring-before($text, $from)"/>
        <xsl:variable name="after" select="substring-after($text, $from)"/>
        <xsl:variable name="prefix" select="concat($before, $to)"/>
        <xsl:value-of select="$before"/>
        <xsl:value-of select="$to"/>
        <xsl:call-template name="replace-string">
          <xsl:with-param name="text" select="$after"/>
          <xsl:with-param name="from" select="$from"/>
          <xsl:with-param name="to" select="$to"/>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$text"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>

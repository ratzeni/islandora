<?php
/* 
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

function fedora_ilives_menu() {
  $items = array();
  $items['fedora/ilives'] = array(
    'title' => t('Book View'),
    'page callback' => 'fedora_ilives_create_book_view',
    'type' => MENU_CALLBACK,
    'access arguments' => array('view fedora collection'),
  );
   $items['fedora/ilives_book_viewer'] = array(
    'title' => t('Book Viewer'),
    'page callback' => 'fedora_ilives_book_viewer',
    'type' => MENU_CALLBACK,
    'access arguments' => array('view fedora collection'),
  );
  $items['fedora/ilives_book_search'] = array(
    'title' => t('Book Viewer'),
    'page callback' => 'fedora_ilives_book_search',
    'type' => MENU_CALLBACK,
    'access arguments' => array('view fedora collection'),
  );
  $items['fedora/ilives_page_search'] = array(
    'title' => t('Book Viewer'),
    'page callback' => 'fedora_ilives_page_search',
    'type' => MENU_CALLBACK,
    'access arguments' => array('view fedora collection'),
  );
  return $items;
}



//function fedora_ilives_book_search($query) {

//}

//function fedora_ilives_page_search($query) {

//}

function fedora_ilives_block($op = 'list', $delta = 0, $edit = array()) {
  // The $op parameter determines what piece of information is being requested.
  switch ($op) {
    case 'list':
      // If $op is "list", we just need to return a list of block descriptions.
      // This is used to provide a list of possible blocks to the administrator,
      // end users will not see these descriptions.
      $blocks[0] = array(
        'info'       => t('Book Search Block'),
      );
      $blocks[1] = array(
        'info' => t('Image Rotator and Tagger'),
      );

      return $blocks;
    case 'configure':
      // If $op is "configure", we need to provide the administrator with a
      // configuration form. The $delta parameter tells us which block is being
      // configured. In this example, we'll allow the administrator to customize
      // the text of the first block.
              // If $op is "configure", we need to provide the administrator with a
      // configuration form. The $delta parameter tells us which block is being
      // configured. In this example, we'll allow the administrator to customize
      // the text of the first block.
      $form = array();
      switch ($delta) {
        case 0:
          // All we need to provide is a text field, Drupal will take care of
          // the other block configuration options and the save button.
         $form['fedora_ilives_book_search_block_repeat'] = array(
            '#type' => 'textfield',
            '#title' => t('Number of times to repeat search fields'),
            '#size' => 5,
            '#description' => t('The number of times you would like the search blocks to be repeated'),
            '#default_value' => variable_get('fedora_ilives_book_search_block_repeat', t('3')),
          );
          break;
        case 1:
          // This is the image rotator block.
          $form['fedora_ilives_image_rotator_block_query'] = array(
            '#type' => 'textarea',
            '#title' => t('ITQL Query'),
            '#description' => t('The ITQL query to return a list of images.'),
            '#default_value' => variable_get('fedora_ilives_image_rotator_tagger_block_query', 'select $object $title from <#ri>
where $object <info:fedora/fedora-system:def/relations-external#isMemberOfCollection> <info:fedora/ilives:figures>
and $object <fedora-model:state> <info:fedora/fedora-system:def/model#Active>
and $object <dc:title> $title'),
          );
          break;
      }

      return $form;
    case 'save':
      // If $op is "save", we need to save settings from the configuration form.
      // Since the first block is the only one that allows configuration, we
      // need to check $delta to make sure we only save it.
      switch ($delta) {
        case 0:
          // Have Drupal save the string to the database.
          variable_set('fedora_ilives_book_search_block_repeat', $edit['fedora_ilives_book_search_block_repeat']);
          break;
        case 1:
          variable_set('fedora_ilives_image_rotator_tagger_block_query', $edit['fedora_ilives_image_rotator_block_query']);
          break;
      }
      return;
    case 'view': default:
      // If $op is "view", then we need to generate the block for display
      // purposes. The $delta parameter tells us which block is being requested.
      switch ($delta) {
        case 0:
          // The subject is displayed at the top of the block. Note that it
          // should be passed through t() for translation.
          $block['subject'] = t('Book Advanced Search');
          // The content of the block is typically generated by calling a custom
          // function.
          $block['content'] = drupal_get_form('fedora_ilives_book_search_form');
          break;
        case 1:
          module_load_include('inc', 'fedora_repository', 'plugins/image_rotator_tagger_block');
          $block['subject'] = t('Random Repository Image');
          $block['content'] = _fedora_image_rotator_tagger_block_content();
          break;
      }

      return $block;
  }
}



function fedora_ilives_book_viewer($pid) {
  global $user;
    $qs = '';
    if ($user->uid != 0) {
//      $qs = '?uid=' . base64_encode($user->name . ':' . $user->sid);
      $qs = '?uid=' . base64_encode($user->name . ':' . $user->pass);
    }

    $viewer_url = variable_get('fedora_base_url', '') . '/get/' . $pid . '/ilives:viewerSdef/getViewer' . $qs;
    $html = '<iframe src="' . $viewer_url .'" frameborder="0" style="width: 100%; height: 800px;">Errors: unable to load viewer</iframe>';
    $fieldset = array(
      '#title' => t('Viewer - ').$pid,
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#value' => $html);
    drupal_add_css(path_to_theme() . '/header-viewer.css', 'theme');
    return theme('fieldset', $fieldset);
  
}
//loads an xslt for the main book page uses mods for most of the display.  if there is a $query parameter
// it will execute it against the book.
function fedora_ilives_create_book_view($pid, $query=null) {
  global $user; //drupal user
  module_load_include( 'php', 'Fedora_Repository', 'ObjectHelper' );
  $path = drupal_get_path('module', 'Fedora_Repository');
  $objectHelper = new ObjectHelper;
  $xml = $objectHelper->getStream($pid, 'MODS');
  $dc_xml = $objectHelper->getStream($pid, 'DC');
  if(!$dc_xml){
    drupal_set_message(t('Object does not exist.'),'error');
    return '';
  }
  $simpleDCxml = simplexml_load_string($dc_xml);
  //$simpleDCxml['xmlns'] = '';//so we don't have to worry about namespace in
  $types = $simpleDCxml->xpath('//dc:type');
  $ingested='false';
  foreach ($types as $type) {
   if ($type=='ingested'){
    $ingested='true';
   }
  }  

  if (!isset($pid)) {
    drupal_set_message(t('Error getting Book View, no identifier specified'));
    return;
  }
  $proc = NULL;
  try {
    $proc = new XsltProcessor();
  } catch (Exception $e) {
    drupal_set_message(t('Error loading Book View xslt! ') . $e->getMessage());
    return;
  }

  //inject into xsl stylesheet
  $proc->setParameter('','userID',$user->uid);
  $proc->setParameter('', 'objectsPage', base_path());
  $proc->setParameter('', 'pid', $pid);
  $proc->setParameter('', 'ingested',$ingested);
  $xsl = new DomDocument();
  $test=$xsl->load($path . '/ilives/xsl/book_view.xsl');
  if (!isset($test)) {
    drupal_set_message(t('Error loading search results xslt!'));
    return t('Error loading search results xslt! ');
  }

  $input = new DomDocument();
  $didLoadOk = $input->loadXML($xml);
  $output=null;
  if (!isset($didLoadOk)) {
    drupal_set_message(t('Error loading Book View xml!'));
    return t('Error loading Book View xml! ');
  }
  else {
    $xsl = $proc->importStylesheet($xsl);
    $newdom = $proc->transformToDoc($input);
    $output.= $newdom->saveXML();
  }
  if(isset($query)){
    module_load_include('php', 'Fedora_Repository', 'SearchClass');
    $searchClass = new SearchClass();
    $pageQuery=convert_query_to_page_query($query,$pid);
    $output .= '<div>'.$searchClass->custom_search($pageQuery,$startPage,'/ilives/xsl/pageResults.xsl',500).'</div>';//limit results to 500 pages of a book since there is no paging if we enable paging in xslt this can be changed
    //return $output."<div>used this query to find this page $query and new query = $pageQuery</div>";

   return $output;
  }else{
    return $output;
}
}

function convert_query_to_page_query($query,$pid){
  $newQuery= substr($query,0,strlen($query)-23);
  $pid = str_replace(':','?',$pid);
  $newQuery = $newQuery." AND PID:$pid* AND dc.type:Text";
  //$newQuery=htmlentities(urlencode($newQuery));
  return $newQuery;
}

/**
* Custom form element to do our nice images.
*/
function fedora_ilives_elements() {  // Change this line
  $type['imagebutton'] = array(
    '#input' => TRUE,
    '#button_type' => 'submit',
    '#executes_submit_callback' => TRUE,
    '#name' => 'op',
    '#process' => array('hook_imagebutton_process' => array()),
  );
  return $type;
}

function theme_imagebutton($element) {
  return '<input  style="background:url(\'\'); border:0px; width:10px; padding:0px,0px,0px,0px;" type="image" class="form-'. $element['#button_type'] .'" name="'. $element['#name'] .'" id="'. $element['#id'] .'" value="'. check_plain($element['#default_value']) .'" '. drupal_attributes($element['#attributes']) .' src="' . $element['#image'] . '" alt="' . $element['#title'] . '" title="' . $element['#title'] . "\" />\n";
}

/**
 * Implementation of hook_theme() to register how to theme image buttons.
 */
function fedora_ilives_theme() {
  return array(
    'imagebutton' => array(
      'arguments' => array('form' => NULL),
    ),
    'fedora_ilives_book_search_form' => array(
      'arguments' =>array('form' => NULL),
    )
  );
}

return array(
    'fedora_repository_mnpl_advanced_search_form' => array(
      'arguments' => array('form' => NULL)
    )
  );

  function theme_fedora_ilives_book_search_form($form) {
        module_load_include('php', 'Fedora_Repository', 'SearchClass');
        $advanced_search_form = new SearchClass();
         $repeats = variable_get('fedora_ilives_book_search_block_repeat',  t('3'));
        return $advanced_search_form->theme_advanced_search_form($form,$repeats);

    }

    function fedora_ilives_book_search_form() {
      module_load_include('php', 'Fedora_Repository', 'SearchClass');
        $searchClass = new SearchClass();
        $repeats = variable_get('fedora_ilives_book_search_block_repeat',  t('3'));
        $path = drupal_get_path('module', 'Fedora_Repository').'/ilives';
        $query=null;
        if(arg(1)=='ilives_book_search' && arg(2)!='dc.type:ingested'){
          $length = strlen(arg(2));
          if(($test=strpos(arg(2),'dc.type:collection'))>0){
            $length=$test-5;//get rid of the AND
            }
          $query=trim(substr(arg(2),0,$length));
        }
        return $searchClass->build_advanced_search_form($repeats,$path,$query);
    }
    function fedora_ilives_book_search_form_submit($form, &$form_state) {
        $type_id = $form_state['values']['type'];
        $repeat = variable_get('fedora_ilives_book_search_block_repeat',  t('3'));
        $searchString = $form_state['values']['type1'].':'.$form_state['values']['fedora_terms1'];
        if($form_state['values']['fedora_terms2']!='') {
            $searchString .='+'.$form_state['values']['andor1'].'+'.$form_state['values']['type2'].':'.$form_state['values']['fedora_terms2'] ;
        }
        if($repeat>2 && $repeat < 9) {
            for($i=3;$i<$repeat+1;$i++) {
                $t=$i-1;
                if($form_state['values']["fedora_terms$i"]!='') {
                    $searchString .='+'.$form_state['values']["andor$t"].'+'.$form_state['values']["type$i"].':'.$form_state['values']["fedora_terms$i"] ;
                }
            }

        }
        $searchString = trim($searchString).'+AND+dc.type:collection';
        $form_state['redirect']="fedora/ilives_book_search/$searchString";
        //drupal_goto("fedora/ilives_book_search/$searchString");

    }

    function fedora_ilives_book_search($query,$startPage=1) {
         module_load_include('php', 'Fedora_Repository', 'SearchClass');
        $searchClass = new SearchClass();
        return $searchClass->custom_search($query,$startPage,'/ilives/xsl/results.xsl',10);
    }

    /*function custom_search($query) {
        module_load_include('php', 'Fedora_Repository', 'ObjectHelper');
        module_load_include('php', 'Fedora_Repository', 'SearchClass');
        if (user_access('view fedora collection')) {
            $numberOfHistPerPage = '1000';//hack for IR they do not want next button
            $luceneQuery = null;
            //demo search string ?operation=gfindObjects&indexName=DemoOnLucene&query=fgs.DS.first.text%3Achristmas&hitPageStart=11&hitPageSize=10


            $indexName = variable_get('fedora_index_name', 'DemoOnLucene');
            $query.=$query.'+dc.type:collection';
            $query=htmlentities(urlencode($query));

            $searchUrl = variable_get('fedora_fgsearch_url', 'http://localhost:8080/fedoragsearch/rest');
            $searchString = '?operation=gfindObjects&indexName=' . $indexName . '&restXslt=copyXml&query=' . $query;
            $searchString .= '&hitPageSize='.$numberOfHistPerPage.'&hitPageStart=1';
            //$searchString = htmlentities($searchString);
            $searchUrl .= $searchString;

            $objectHelper = new ObjectHelper();

            $resultData = $objectHelper->doCurl($searchUrl,1);
            //var_dump($resultData);exit(0);
            //	$doc = new DOMDocument();
            //	$doc->loadXML($resultData);
            $searchClass = new SearchClass();
            $output.=$searchClass->applyLuceneXSLT($resultData);

            return $output;

        }
    }*/
